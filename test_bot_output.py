import unittest
from unittest.mock import patch, MagicMock
from bot import select_ticker
import pandas as pd
import tensorflow as tf


class TestBotOutput(unittest.TestCase):

    @patch('telebot.TeleBot.send_message')  # –ú–æ–∫–∏—Ä—É–µ–º send_message
    @patch('telebot.TeleBot.edit_message_text')  # –ú–æ–∫–∏—Ä—É–µ–º edit_message_text
    @patch('telebot.TeleBot.delete_message')  # –ú–æ–∫–∏—Ä—É–µ–º delete_message
    @patch('time.sleep')  # –ú–æ–∫–∏—Ä—É–µ–º time.sleep
    @patch('yfinance.download')  # –ú–æ–∫–∏—Ä—É–µ–º yfinance.download
    @patch('ml_forecast.predict_stock_price')  # –ú–æ–∫–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
    def test_message_format_and_timer(self, mock_predict, mock_yf, mock_sleep, mock_delete_message,
                                      mock_edit_message, mock_send_message):
        # –ú–æ–∫–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è yfinance
        mock_yf.return_value = pd.DataFrame({
            'Close': [150.24, 148.39, 149.00, 151.30]
        })

        # –ú–æ–∫–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
        mock_predict.return_value = 152.40  # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ = 152.40

        # –ú–æ–∫–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        chat_id = 12345
        selected_ticker = 'AAPL'
        last_price = 150.24
        price_change = 1.85
        change_percent = 1.25
        predicted_price = 152.40
        trend = "üìà –ë—ã—á–∏–π —Ä—ã–Ω–æ–∫"

        # –û–∂–∏–¥–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        expected_signal_text = (
            f"üìä *–ê–Ω–∞–ª–∏–∑ {selected_ticker}*:\n"
            f"üìà *–¶–µ–Ω–∞*: *${last_price:.2f}*\n"
            f"üî∫ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –¥–µ–Ω—å*: +{change_percent:.2f}% (+{price_change:.2f}$)\n"
            f"üîÆ *–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞*: ${predicted_price:.2f}\n"
            f"üìä *–¢—Ä–µ–Ω–¥*: {trend}\n"
        )

        # –ú–æ–∫–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message = MagicMock()
        message.chat.id = chat_id
        message.text = selected_ticker
        message.message_id = 67890  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è

        # –û—Ç–∫–ª—é—á–∞–µ–º GPU –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        tf.config.set_visible_devices([], 'GPU')

        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é select_ticker
        select_ticker(message)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ send_message –±—ã–ª –≤—ã–∑–≤–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        # –ú—ã –æ–∂–∏–¥–∞–µ–º –¥–≤–∞ –≤—ã–∑–æ–≤–∞: –æ–¥–∏–Ω –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–¥–∏–Ω –¥–ª—è –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
        mock_send_message.assert_any_call(chat_id,
                                          'üîÑ –ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∏–∫–µ—Ä–∞... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.')
        mock_send_message.assert_any_call(chat_id, '‚è±Ô∏è –û—Ç—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞—Ç...')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ send_message –±—ã–ª –≤—ã–∑–≤–∞–Ω —Å –∏—Ç–æ–≥–æ–≤—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        mock_send_message.assert_any_call(chat_id, expected_signal_text, parse_mode='Markdown')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ edit_message_text –±—ã–ª –≤—ã–∑–≤–∞–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        mock_edit_message.assert_any_call(f"üîÑ *–®–∞–≥ 1/4:* –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
                                          chat_id, message.message_id)
        mock_edit_message.assert_any_call(f"üîÑ *–®–∞–≥ 2/4:* –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º —Ü–µ–Ω—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞...",
                                          chat_id, message.message_id)
        mock_edit_message.assert_any_call(f"üîÑ *–®–∞–≥ 3/4:* –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ç—Ä–µ–Ω–¥...",
                                          chat_id, message.message_id)
        mock_edit_message.assert_any_call(f"‚úÖ *–ó–∞–≤–µ—Ä—à–µ–Ω–æ!* –í—Å–µ —à–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.\n{expected_signal_text}",
                                          chat_id, message.message_id, parse_mode='Markdown')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ delete_message –±—ã–ª –≤—ã–∑–≤–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–∞–π–º–µ—Ä–æ–º
        mock_delete_message.assert_called_once_with(chat_id, message.message_id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–π–º–µ—Ä –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —à–∞–≥–æ–≤
        mock_sleep.assert_called()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ time.sleep –±—ã–ª –≤—ã–∑–≤–∞–Ω, —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Ç–∞–π–º–µ—Ä–∞

if __name__ == '__main__':
    unittest.main()

