from config import TICKERS
from utils import get_token
from analysis import analyze_stock
from ml_forecast import predict_stock_price
from chart import send_stock_chart
from trend_classifier import classify_trend
import telebot
import logging
import time
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

bot = telebot.TeleBot(get_token())

@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    buttons = [telebot.types.KeyboardButton(ticker) for ticker in TICKERS]
    keyboard.add(*buttons)
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–∫–µ—Ä:', reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text in TICKERS)
def select_ticker(message):
    chat_id = message.chat.id
    selected_ticker = message.text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
    progress_message = bot.send_message(chat_id, "üîÑ –ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∏–∫–µ—Ä–∞... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    countdown_message = bot.send_message(chat_id, "‚è±Ô∏è –û—Ç—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞—Ç...")

    # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
    start_time = time.time()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á—ë—Ç—á–∏–∫–∞ —à–∞–≥–æ–≤
    step_counter = 1

    # –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    keep_countdown = True

    def update_countdown():
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
        while keep_countdown:
            elapsed_time = time.time() - start_time
            bot.edit_message_text(f"‚è±Ô∏è –û—Ç—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏: {elapsed_time:.2f} —Å–µ–∫—É–Ω–¥", chat_id, countdown_message.message_id)
            time.sleep(1)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
    countdown_thread = threading.Thread(target=update_countdown)
    countdown_thread.daemon = True
    countdown_thread.start()

    try:
        # –®–∞–≥ 1: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
        step_start_time = time.time()  # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —à–∞–≥–∞
        bot.edit_message_text(f"üîÑ *–®–∞–≥ {step_counter}/4:* –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.",
                              chat_id, progress_message.message_id)
        step_counter += 1

        data = analyze_stock(selected_ticker)
        last_price = float(data["Close"].iloc[-1])
        prev_price = float(data["Close"].iloc[-2])  # –¶–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
        price_change = last_price - prev_price
        change_percent = (price_change / prev_price) * 100

        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —à–∞–≥–∞ 1
        elapsed_time = time.time() - step_start_time
        bot.edit_message_text(f"üîÑ *–®–∞–≥ {step_counter-1}/4:* –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω. –ü—Ä–æ—à–ª–æ {elapsed_time:.2f} —Å–µ–∫—É–Ω–¥.",
                              chat_id, progress_message.message_id)

        # –®–∞–≥ 2: –ü—Ä–æ–≥–Ω–æ–∑
        step_start_time = time.time()  # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —à–∞–≥–∞
        bot.edit_message_text(f"üîÆ *–®–∞–≥ {step_counter}/4:* –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º —Ü–µ–Ω—É –Ω–∞ –∑–∞–≤—Ç—Ä–∞...",
                              chat_id, progress_message.message_id)
        step_counter += 1

        predicted_price = predict_stock_price(selected_ticker)

        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —à–∞–≥–∞ 2
        elapsed_time = time.time() - step_start_time
        bot.edit_message_text(f"üîÆ *–®–∞–≥ {step_counter-1}/4:* –ü—Ä–æ–≥–Ω–æ–∑ –∑–∞–≤–µ—Ä—à—ë–Ω. –ü—Ä–æ—à–ª–æ {elapsed_time:.2f} —Å–µ–∫—É–Ω–¥.",
                              chat_id, progress_message.message_id)

        # –®–∞–≥ 3: –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç—Ä–µ–Ω–¥–∞
        step_start_time = time.time()  # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —à–∞–≥–∞
        bot.edit_message_text(f"üìä *–®–∞–≥ {step_counter}/4:* –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ç—Ä–µ–Ω–¥...",
                              chat_id, progress_message.message_id)
        step_counter += 1

        trend = classify_trend(selected_ticker)

        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —à–∞–≥–∞ 3
        elapsed_time = time.time() - step_start_time
        bot.edit_message_text(f"üìä *–®–∞–≥ {step_counter-1}/4:* –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç—Ä–µ–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ—à–ª–æ {elapsed_time:.2f} —Å–µ–∫—É–Ω–¥.",
                              chat_id, progress_message.message_id)

        # –®–∞–≥ 4: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        signal_text = (
            f"\nüìà *–¶–µ–Ω–∞*: *${last_price:.2f}*\n"
            f"üî∫ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ –¥–µ–Ω—å*: *{price_change:+.2f}* (+{change_percent:+.2f}%)\n"
            f"üîÆ *–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞*: *${predicted_price:.2f}*\n"
            f"üìä *–¢—Ä–µ–Ω–¥*: {trend}\n"
        )

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏
        keep_countdown = False
        # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è —Å –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
        total_elapsed_time = time.time() - start_time
        signal_text += f"\n‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {total_elapsed_time:.2f} —Å–µ–∫—É–Ω–¥."
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
        bot.delete_message(chat_id, countdown_message.message_id)
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        bot.edit_message_text(f"‚úÖ *–ó–∞–≤–µ—Ä—à–µ–Ω–æ!* –í—Å–µ —à–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.\n{signal_text}",
                              chat_id, progress_message.message_id, parse_mode='Markdown')

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
        send_stock_chart(selected_ticker, chat_id)

    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        bot.edit_message_text(f'‚ùå –û—à–∏–±–∫–∞: {str(e)}', chat_id, progress_message.message_id)

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        keep_countdown = False


if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ polling")
